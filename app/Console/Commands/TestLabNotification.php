<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Carbon\Carbon;
use Illuminate\Support\Facades\DB;
use App\Helpers\TelegramHelper;

class TestLabNotification extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'test:lab-notification';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щр╕Ьр╕ер╣Бр╕ер╣Зр╕Ър╕Ьр╣Ир╕▓р╕Щ Telegram';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $this->info('р╣Ар╕гр╕┤р╣Ир╕бр╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щ...');

        $labres = DB::connection('sqlsrv')
            ->table('Labres_m')
            ->whereDate('res_date', Carbon::now())
            ->get();

        $this->info("р╕Юр╕Ър╕Ьр╕ер╣Бр╕ер╣Зр╕Ър╕зр╕▒р╕Щр╕Щр╕╡р╣Й: {$labres->count()} р╕гр╕▓р╕вр╕Бр╕▓р╕г");

        if ($labres->count() > 0) {
            $subscribers = DB::connection('mysql')
                ->table('telegram_subscribers')
                ->where('is_active', 1)
                ->get();

            $this->info("р╕Юр╕Ър╕Ьр╕╣р╣Йр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щ: {$subscribers->count()} р╕Др╕Щ");

            // р╕кр╕гр╣Йр╕▓р╕З array р╣Ар╕Бр╣Зр╕Ъ HN
        $hns = $labres->pluck('hn')->unique()->implode(', ');


            $message = "ЁЯУв р╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щ (р╕Чр╕Фр╕кр╕нр╕Ъ)\n" .
                "р╕Ьр╕ер╣Бр╕ер╣Зр╕Ър╕Ыр╕гр╕░р╕Ир╕│р╕зр╕▒р╕Щр╕Чр╕╡р╣И " . Carbon::now()->format('d/m/Y') . "\n" .
                "р╕бр╕╡hn р╕Фр╕▒р╕Зр╕Щр╕╡р╣Й:\n" .
                $hns;

            foreach ($subscribers as $subscriber) {
                try {
                    TelegramHelper::sendMessage($subscriber->chat_id, $message);
                    $this->info("тЬЕ р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕кр╕│р╣Ар╕гр╣Зр╕И - Chat ID: {$subscriber->chat_id}");
                } catch (\Exception $e) {
                    $this->error("тЭМ р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б - Chat ID: {$subscriber->chat_id}");
                    $this->error("р╕кр╕▓р╣Ар╕лр╕Хр╕╕: " . $e->getMessage());
                }
            }
        }
        $this->info('р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щр╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ');
    }
}
